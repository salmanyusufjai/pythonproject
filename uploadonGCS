import os
from google.cloud import storage

def upload_files_to_gcs(bucket_name, source_folder, prefixes, destination_folder):
    """Uploads all files starting with any of the specified prefixes from a folder to a GCS bucket."""
    
    # Create a client
    storage_client = storage.Client()
    
    # Get the bucket
    bucket = storage_client.bucket(bucket_name)
    
    # List all files in the source folder that start with any of the given prefixes
    files_to_upload = [f for f in os.listdir(source_folder) if any(f.startswith(prefix) for prefix in prefixes)]
    
    for file_name in files_to_upload:
        # Full path of the file to upload
        source_file_path = os.path.join(source_folder, file_name)
        
        # Create the destination path in GCS, preserving the original file name
        destination_blob_name = os.path.join(destination_folder, file_name)
        
        # Create a blob (file) in the GCS bucket
        blob = bucket.blob(destination_blob_name)
        
        # Upload the file
        blob.upload_from_filename(source_file_path)
        
        print(f"File {source_file_path} uploaded to gs://{bucket_name}/{destination_blob_name}")

# Usage example:
bucket_name = "mybucket"  # Your GCS bucket name
source_folder = "/path/to/local/folder"  # Local folder with files
prefixes = ["abc_audit_20241015", "abc_20241015"]  # List of prefixes to match files
destination_folder = "inbound"  # Destination folder in GCS bucket

upload_files_to_gcs(bucket_name, source_folder, prefixes, destination_folder)
